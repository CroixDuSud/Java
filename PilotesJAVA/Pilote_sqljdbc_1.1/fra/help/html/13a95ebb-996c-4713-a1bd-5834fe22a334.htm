<html DIR="LTR" xmlns:tool="http://www.microsoft.com/tooltip" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:ddue="http://ddue.schemas.microsoft.com/authoring/2003/5" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
  <head>
    <META HTTP-EQUIV="Content-Type" CONTENT="text/html; CHARSET=Windows-1252" />
    <META NAME="save" CONTENT="history" />
    <title>Mise en cache de l'exemple de données du jeu de résultats</title>
    
    <link rel="stylesheet" type="text/css" href="../local/Classic.css">
      
    </link>
    
    <script src="../local/script_loc.js">
      
    </script>
    <script src="../local/script_main.js">
      
    </script>
  </head>
  <body style="display: none;">
    <!--Topic built:11/3/2006-->
<input type="hidden" id="userDataCache" class="userDataStyle">
    </input>
    <input type="hidden" id="hiddenScrollOffset">
    </input>
    <div id="header">
        <tr>
          <td align="left">
            <span id="headerBold">Mise en cache de l'exemple de données du jeu de résultats</span>
          </td>
        </tr>
      </table>
      <IMG id="SeeAlso1" style="display:none; height:0; width:0;" src="../local/SeeAlso1a.gif">
        
      </IMG>
      <IMG id="SeeAlso2" style="display:none; height:0; width:0;" src="../local/SeeAlso1c.gif">
        
      </IMG>
      <IMG id="Filter1" style="display:none; height:0; width:0;" src="../local/Filter1a.gif">
        
      </IMG>
      <IMG id="Filter2" style="display:none; height:0; width:0;" src="../local/Filter1c.gif">
        
      </IMG>
      <span style="display:none" id="languageSpan">
        <h1 class="heading">
          Langage
        </h1>
        <div id="selectLanguage" class="section">
          <div class="languageFilter" id="VisualBasic" onclick="ChangeLanguage(this.id)" onkeypress="ChangeLanguage_CheckKey(this.id)" tabindex="0">
            [Visual Basic]
          </div>
          <div class="languageFilter" id="CSharp" onclick="ChangeLanguage(this.id)" onkeypress="ChangeLanguage_CheckKey(this.id)" tabindex="0">
            [C#]
          </div>
          <div class="languageFilter" id="ManagedCPlusPlus" onclick="ChangeLanguage(this.id)" onkeypress="ChangeLanguage_CheckKey(this.id)" tabindex="0">
            [C++]
          </div>
          <div class="languageFilter" id="JSharp" onclick="ChangeLanguage(this.id)" onkeypress="ChangeLanguage_CheckKey(this.id)" tabindex="0">
            [J#]
          </div>
          <div class="languageFilter" id="JScript" onclick="ChangeLanguage(this.id)" onkeypress="ChangeLanguage_CheckKey(this.id)" tabindex="0">
            [JScript]
          </div>
          <div class="languageFilter" id="all" onclick="ChangeLanguage(this.id)" onkeypress="ChangeLanguage_CheckKey(this.id)" tabindex="0">
            (Afficher tout)
          </div>
        </div>
      </span>
    </div>
    <div id="mainSection">
      <div id="allHistory" class="saveHistory" onsave="saveAll()" onload="loadAll()">
      </div>
      <font color="DarkGray"><!-- [This topic is pre-release documentation and is subject to change in future releases. Blank topics are included as placeholders.]<br/>[Documentation built on 11/3/2006]  --></font><p /><p />
      <div id="introductionSection" class="section">
    <p>Cet exemple d'application du pilote JDBC de Microsoft de SQL Server 2005 présente l'extraction d'un vaste ensemble de données à partir d'une base de données, ainsi que le contrôle d'un certain nombre de lignes de données mises en cache sur le client à l'aide de la méthode <a href="233bf4f8-4758-42d0-a80b-33e34fa78027.htm">setFetchSize</a> de l'objet <a href="eaffcff1-286c-459f-83da-3150778480c9.htm">SQLServerResultSet</a>.</p>
    <div style="margin: .5em 1.5em .5em 1.5em"><b>Remarque : </b>
      Limiter le nombre de lignes mises en cache sur le client et limiter le nombre total de lignes qu'un jeu de résultats peut contenir sont deux choses différentes. Pour contrôler le nombre total de lignes contenues dans un jeu de résultats, utilisez la méthode <a href="cccc0667-589b-4655-8ea8-14ae8b2eb9dc.htm">setMaxRows</a> de l'objet <a href="ec24963c-8b51-4838-91e9-1fbfa2347451.htm">SQLServerStatement</a>, héritée par les objets <a href="a8481c06-fbba-432b-8c69-4f4619c20ad4.htm">SQLServerPreparedStatement</a> et <a href="30710a63-c05d-47d9-9cf9-c087a1c76373.htm">SQLServerCallableStatement</a>.<p></p>
    </div>
    <p>Pour définir une limite du nombre de lignes mises en cache sur le client, vous devez d'abord utiliser un curseur côté serveur lorsque vous créez l'un des objets <b>Statement</b> en indiquant de manière spécifique le type de curseur à utiliser lors de la création de l'objet <b>Statement</b>. Par exemple, le pilote JDBC propose le type de curseur TYPE_SS_SERVER_CURSOR_FORWARD_ONLY, qui est un curseur côté serveur d'avance rapide uniquement et en lecture seule, à utiliser avec les bases de données SQL Server.</p>
    <div style="margin: .5em 1.5em .5em 1.5em"><b>Remarque : </b>
      Une alternative à l'utilisation d'un type de curseur spécifique à SQL Server est l'utilisation de la propriété de chaîne de connexion selectMethod, en définissant sa valeur sur « curseur ». Pour plus d'informations sur les types de curseurs pris en charge par le pilote JDBC, consultez <a href="4f4d3db7-4f76-450d-ab63-141237a4f034.htm">Types de curseurs</a>.<p></p>
    </div>
    <p>Après avoir exécuté la requête contenue dans l'objet <b>Statement</b> et après que les données soient retournées au client en tant que jeu de résultats, vous pouvez appeler la méthode <b>setFetchSize</b> pour contrôler la quantité de données extraite de la base de données en une fois. Par exemple, si une table contient 100 lignes de données et si vous définissez la taille d'extraction à 10, seules 10 lignes de données seront mises en cache sur le client à tout moment. Même si ceci ralentit la vitesse de traitement des données, cela présente l'avantage d'utiliser moins de mémoire sur le client, ce qui peut être particulièrement utile lorsque vous devez traiter de grandes quantités de données.</p>
    <p>Le fichier de code de cet exemple est appelé cacheRS.java et se trouve à l'emplacement suivant :</p>
    <p>&lt;<i>répertoire d'installation</i>&gt;\sqljdbc_&lt;<i>version</i>&gt;\&lt;<i>langue</i>&gt;\help\samples\resultsets</p>
  </div>
      <h1 class="heading">
        Configuration requise
      </h1>
      <div id="requirementsSection" class="section">
    <content xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">
      <p xmlns="">Pour exécuter cet exemple d'application, vous devez définir l'instruction classpath pour inclure le fichier sqljdbc.jar. Si l'instruction classpath n'a pas d'entrée pour sqljdbc.jar, l'exemple d'application lève l'exception courante « Classe introuvable ». Vous devrez également accéder à l'exemple de base de données SQL Server 2005 AdventureWorks.</p>
      <p xmlns="">Pour plus d'informations sur la définition de l'instruction classpath, voir <a href="6faaf05b-8b70-4ed2-9b44-eee5897f1cd0.htm">Utilisation du pilote JDBC</a>.</p>
    </content>
  </div>
      <h1 class="heading">
        Exemple
      </h1>
      <div id="codeExampleSection" class="section">
    <description xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">
      <content>
        <p xmlns="">Dans l'exemple suivant, l'exemple de code crée une connexion à l'exemple de base de données AdventureWorks. Puis, il utilise des instructions SQL avec l'objet <a href="ec24963c-8b51-4838-91e9-1fbfa2347451.htm">SQLServerStatement</a>, spécifie le type de curseur côté serveur, exécute les instructions SQL et place les données qu'il renvoie dans un objet <b>SQLServerResultSet</b>.</p>
        <p xmlns="">Ensuite, l'exemple de code appelle la méthode personnalisée <b>timerTest</b>, en transmettant en tant qu'arguments la taille d'extraction à utiliser et le jeu de résultats. La méthode <b>timerTest</b> définit alors la taille d'extraction du jeu de résultats en utilisant la méthode <b>setFetchSize</b> et définit l'heure de début du test, puis répète cela pour le jeu de résultats avec une boucle <code> While </code>. Dès la sortie de la boucle <code> While </code>, le code définit l'heure d'arrêt du test et affiche le résultat du test, y compris la taille d'extraction, le nombre de lignes traitées et la durée d'exécution du test.</p>
      </content>
    </description>
    <div class="sampleCode"><span codeLanguage="other"><pre>import java.sql.*;
import com.microsoft.sqlserver.jdbc.SQLServerResultSet;

public class cacheRS {

   public static void main(String[] args) {

      // Create a variable for the connection string.
      String connectionUrl = "jdbc:sqlserver://localhost:1433;" +
            "databaseName=AdventureWorks;integratedSecurity=true;";

      // Declare the JDBC objects.
      Connection con = null;
      Statement stmt = null;
      ResultSet rs = null;

      try {

         // Establish the connection.
         Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
         con = DriverManager.getConnection(connectionUrl);

         // Create and execute an SQL statement that returns a large
         // set of data and then display it.
         String SQL = "SELECT * FROM Sales.SalesOrderDetail;";
         stmt = con.createStatement(SQLServerResultSet.TYPE_SS_SERVER_CURSOR_FORWARD_ONLY, +
               SQLServerResultSet.CONCUR_READ_ONLY);

         // Perform a fetch for every row in the result set.
         rs = stmt.executeQuery(SQL);
         timerTest(1, rs);
         rs.close();

         // Perform a fetch for every tenth row in the result set.
         rs = stmt.executeQuery(SQL);
         timerTest(10, rs);
         rs.close();

         // Perform a fetch for every 100th row in the result set.
         rs = stmt.executeQuery(SQL);
         timerTest(100, rs);
         rs.close();

         // Perform a fetch for every 1000th row in the result set.
         rs = stmt.executeQuery(SQL);
         timerTest(1000, rs);
         rs.close();

         // Perform a fetch for every 128th row (the default) in the result set.
         rs = stmt.executeQuery(SQL);
         timerTest(0, rs);
         rs.close();
      }

      // Handle any errors that may have occurred.
      catch (Exception e) {
         e.printStackTrace();
      }

      finally {
         if (rs != null) try { rs.close(); } catch(Exception e) {}
         if (stmt != null) try { stmt.close(); } catch(Exception e) {}
         if (con != null) try { con.close(); } catch(Exception e) {}
      }
   }

   public static void timerTest(int fetchSize, ResultSet rs) {
      try {

         // Declare the variables for tracking the row count and elapsed time.
         int rowCount = 0;
         long startTime = 0;
         long stopTime = 0;
         long runTime = 0;

         // Set the fetch size then iterate through the result set to
         // cache the data locally.
         rs.setFetchSize(fetchSize);
         startTime = System.currentTimeMillis();
         while (rs.next()) {
            rowCount++;
         }
         stopTime = System.currentTimeMillis();
         runTime = stopTime - startTime;

         // Display the results of the timer test.
         System.out.println("FETCH SIZE: " + rs.getFetchSize());
         System.out.println("ROWS PROCESSED: " + rowCount);
         System.out.println("TIME TO EXECUTE: " + runTime);
         System.out.println();

      } catch (Exception e) {
         e.printStackTrace();
      }
   }
}</pre></span></div>
  </div>
      <span id="seeAlsoSpan">
        <h1 class="heading">
          Voir aussi
        </h1>
        <div id="seeAlsoSection" class="section">
          <a href="4fc4b1c6-3075-4ad7-9244-865d9ede7ae6.htm">Travail sur des jeux de résultats</a>
        </div>
      </span>
      <!--[if gte IE 5]>
			<tool:tip element="seeAlsoToolTip" avoidmouse="false"/><tool:tip element="languageFilterToolTip" avoidmouse="false"/>
		<![endif]-->
      <div id="footer" class="section">
        <hr /><A NAME="feedback"></A><span id="fb" class="feedbackcss"></span>
		<a href="9bad553b-9e70-4696-8499-2e35f772a1e0.htm">
			
			© 2006 Microsoft Corporation. Tous droits réservés.
		</a>
 	
      </div>
    </div>
  </body>
</html>