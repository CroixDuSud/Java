#------------------------------------------------------------
#        Script MySQL.
#------------------------------------------------------------


#------------------------------------------------------------
# Table: BUREAU
#------------------------------------------------------------
DROP TABLE IF EXISTS BUREAU ;

CREATE TABLE BUREAU(
        NBUR int NOT NULL,
		VILLE varchar(15) NULL,
		REGION varchar(10) NULL,
		CHEF int NULL,
		CIBLE decimal(9, 2) NULL,
		VENTES decimal(9, 2) NULL,
PRIMARY KEY (NBUR)
)ENGINE=InnoDB;


#------------------------------------------------------------
# Table: PRODUIT
#------------------------------------------------------------
DROP TABLE IF EXISTS PRODUIT ;
CREATE TABLE PRODUIT(
        NUSINE char(3) NOT NULL,
		NPROD char(5) NOT NULL,
		LIB varchar(20) NULL,
		PRIX decimal(7, 2) NULL,
		QTESTK smallint NULL,
 
     PRIMARY KEY (NUSINE, NPROD)
)ENGINE=InnoDB;


#------------------------------------------------------------
# Table: REPRESENTANT
#------------------------------------------------------------
DROP TABLE IF EXISTS REPRESENTANT ;
CREATE TABLE REPRESENTANT(
        NREP int NOT NULL,
		NOM varchar(15) NULL,
		AGE smallint NULL,
		NBUR int NULL,
		TITRE varchar(10) NULL,
		DATENT datetime NULL,
		CHEF int NULL,
		QUOTA decimal(9, 2) NULL,
		VENTES decimal(9, 2) NULL,
        PRIMARY KEY (NREP)
)ENGINE=InnoDB;


#------------------------------------------------------------
# Table: CLIENT
#------------------------------------------------------------
DROP TABLE IF EXISTS CLIENT ;
CREATE TABLE CLIENT(
        NCLI int NOT NULL,
		SOCIETE varchar(20) NULL,
		NREP int NULL,
		CREDIT decimal(9, 2) NULL,
        PRIMARY KEY (NCLI)
)ENGINE=InnoDB;


#------------------------------------------------------------
# Table: COMMANDE
#------------------------------------------------------------
DROP TABLE IF EXISTS COMMANDE ;
CREATE TABLE COMMANDE(
        NCDE int NOT NULL,
		DATECDE datetime NULL,
		NCLI int NULL,
		NREP int NULL,
		NUSINE char(3) NULL,
		NPROD char(5) NULL,
		QTE smallint NULL,
		MONTANT decimal(9, 2) NULL,
        PRIMARY KEY (NCDE)
)ENGINE=InnoDB;


ALTER TABLE CLIENT ADD CONSTRAINT FK_CLIENT_NREP FOREIGN KEY (NREP) REFERENCES REPRESENTANT(NREP);
ALTER TABLE REPRESENTANT ADD CONSTRAINT FK_REPRESENTANT_NBUR FOREIGN KEY (NBUR) REFERENCES BUREAU(NBUR);
ALTER TABLE COMMANDE ADD CONSTRAINT FK_COMMANDE_NCLI FOREIGN KEY (NCLI) REFERENCES CLIENT(NCLI);
ALTER TABLE COMMANDE ADD CONSTRAINT FK_COMMANDE_NREP FOREIGN KEY (NREP) REFERENCES REPRESENTANT(NREP);
ALTER TABLE COMMANDE ADD CONSTRAINT FK_COMMANDE_NUSINE FOREIGN KEY (NUSINE) REFERENCES PRODUIT(NUSINE);
ALTER TABLE COMMANDE ADD CONSTRAINT FK_COMMANDE_NPROD FOREIGN KEY (NPROD) REFERENCES PRODUIT(NPROD);


#=====================


DROP TABLE IF EXISTS BUREAU ;

CREATE TABLE BUREAU(
        NBUR int NOT NULL,
		VILLE varchar(15) NULL,
		REGION varchar(10) NULL,
		CHEF int NULL,
		CIBLE decimal(9, 2) NULL,
		VENTES decimal(9, 2) NULL,
PRIMARY KEY (NBUR)
)


DROP TABLE IF EXISTS PRODUIT ;
CREATE TABLE PRODUIT(
        NUSINE char(3) NOT NULL,
		NPROD char(5) NOT NULL,
		LIB varchar(20) NULL,
		PRIX decimal(7, 2) NULL,
		QTESTK smallint NULL,
 
     PRIMARY KEY (NUSINE, NPROD)
)


DROP TABLE IF EXISTS REPRESENTANT ;
CREATE TABLE REPRESENTANT(
        NREP int NOT NULL,
		NOM varchar(15) NULL,
		AGE smallint NULL,
		NBUR int NULL,
		TITRE varchar(10) NULL,
		DATENT datetime NULL,
		CHEF int NULL,
		QUOTA decimal(9, 2) NULL,
		VENTES decimal(9, 2) NULL,
        PRIMARY KEY (NREP)
)



DROP TABLE IF EXISTS CLIENT ;
CREATE TABLE CLIENT(
        NCLI int NOT NULL,
		SOCIETE varchar(20) NULL,
		NREP int NULL,
		CREDIT decimal(9, 2) NULL,
        PRIMARY KEY (NCLI)
)


DROP TABLE IF EXISTS COMMANDE ;
CREATE TABLE COMMANDE(
        NCDE int NOT NULL,
		DATECDE datetime NULL,
		NCLI int NULL,
		NREP int NULL,
		NUSINE char(3) NULL,
		NPROD char(5) NULL,
		QTE smallint NULL,
		MONTANT decimal(9, 2) NULL,
        PRIMARY KEY (NCDE)
)


ALTER TABLE CLIENT ADD CONSTRAINT FK_CLIENT_NREP FOREIGN KEY (NREP) REFERENCES REPRESENTANT(NREP);
ALTER TABLE REPRESENTANT ADD CONSTRAINT FK_REPRESENTANT_NBUR FOREIGN KEY (NBUR) REFERENCES BUREAU(NBUR);
ALTER TABLE COMMANDE ADD CONSTRAINT FK_COMMANDE_NCLI FOREIGN KEY (NCLI) REFERENCES CLIENT(NCLI);
ALTER TABLE COMMANDE ADD CONSTRAINT FK_COMMANDE_NREP FOREIGN KEY (NREP) REFERENCES REPRESENTANT(NREP);
ALTER TABLE COMMANDE ADD CONSTRAINT FK_COMMANDE_PRODUIT FOREIGN KEY (NUSINE, NPROD) REFERENCES PRODUIT(NUSINE, NPROD);
ALTER TABLE BUREAU  ADD CONSTRAINT FK_BUREAU_CHEF FOREIGN KEY (CHEF) REFERENCES REPRESENTANT (NREP);




# -------- LISTE DES REQUÊTES ----------

#1
SELECT NOM, DATENT FROM REPRESENTANT;

#2
SELECT NCDE, QTE, MONTANT FROM COMMANDE;

#3
SELECT * FROM PRODUIT
WHERE LIB LIKE 'HINGE %' OR LIB LIKE '% HINGE';

#4
SELECT DISTINCT REGION FROM BUREAU;

#5
SELECT NREP, NOM FROM REPRESENTANT
WHERE NBUR IS NULL;

#6
SELECT  NREP, NOM, AGE FROM REPRESENTANT
WHERE AGE BETWEEN 40 and 50;

#6bis
SELECT  NREP, NOM, AGE FROM REPRESENTANT
WHERE AGE >= 40 AND AGE <= 50;

#7
SELECT NBUR, VILLE, (VENTES - CIBLE) AS "niveau de réalisation"
FROM BUREAU
WHERE (VENTES - CIBLE) > 0;

#8
SELECT LIB, (QTESTK * PRIX) AS valeur_du_stock
FROM PRODUIT;

#9
SELECT LIB FROM PRODUIT
WHERE (LIB LIKE 'SIZ%') OR (LIB LIKE 'WID%');

#9bis
SELECT LIB FROM PRODUIT
WHERE LIB LIKE 'SIZ%' 
UNION
SELECT LIB FROM PRODUIT
WHERE LIB LIKE 'WID%';

#10
SELECT ('Le bureau numéro : '+ cast(NBUR AS varchar) +' est dans la ville de : '+ cast(VILLE AS varchar)+' ('+cast(REGION AS varchar)+')')
FROM BUREAU
WHERE NBUR = 12;

#11
SELECT NCDE, ROUND(MONTANT, -3) AS m_arrondi, MONTANT AS m_non_arrondi FROM COMMANDE
WHERE ROUND(MONTANT, -3) > MONTANT;

#12
SELECT LIB FROM PRODUIT
WHERE LIB LIKE '__D%';

#13
SELECT NBUR, CIBLE, (CIBLE * 1.1) AS 'cible +10%', VENTES
FROM BUREAU
WHERE VENTES > (CIBLE * 1.1);

#14
SELECT NUSINE, NPROD, LIB
FROM PRODUIT
WHERE LIB LIKE '%R' AND (LEN(LIB) - LEN(replace(LIB, 'r', ''))) >= 2;

#14bis
SELECT NUSINE, NPROD, LIB
FROM PRODUIT
WHERE LIB LIKE '%R%R%';

#15
SELECT NUSINE, NPROD, LIB
FROM PRODUIT
WHERE (LEN(LIB) - LEN(replace(LIB, 'r', ''))) = 1;

#15bis
SELECT NUSINE, NPROD, LIB
FROM PRODUIT
WHERE LIB LIKE '%R%' AND LIB NOT LIKE '%R%R%';

#16
SELECT NREP, NOM
FROM REPRESENTANT
WHERE NREP % 2 = 0;

#17
SELECT (NUSINE+NPROD) 'produit', ((PRIX * QTESTK) / 100) AS 'Prix * qte / 100', ROUND(((PRIX * QTESTK) / 100),1) 'Arrondi au dixième sur la partie décimale', ROUND(((PRIX * QTESTK) / 100),-1) 'Arrondi à 10 sur la partie entière'
FROM PRODUIT;

#17bis 'avec 2 chiffres après la virgule'
SELECT (NUSINE+NPROD) 'produit', cast(((PRIX * QTESTK) / 100) AS numeric(10,2)) AS 'Prix * qte / 100', cast(ROUND(((PRIX * QTESTK) / 100),1) AS numeric(10,2)) 'Arrondi au dixième sur la partie décimale', cast(ROUND(((PRIX * QTESTK) / 100),-1) AS numeric(10,2)) 'Arrondi à 10 sur la partie entière'
FROM PRODUIT;

#18
SELECT LIB,
	CASE
		WHEN (PRIX < 50) THEN 'tranche1'
		WHEN (PRIX >= 50 AND PRIX < 150) THEN 'tranche2'
		WHEN (PRIX >= 150 AND PRIX < 200) THEN 'tranche3'
		ELSE (PRIX >= 200) THEN 'tranche4'
END tranche
FROM PRODUIT
ORDER BY tranche;

#18bis
SELECT LIB,
	CASE
		WHEN (PRIX < 50) THEN 'tranche1'
		WHEN (PRIX >= 50 AND PRIX < 150) THEN 'tranche2'
		WHEN (PRIX >= 150 AND PRIX < 200) THEN 'tranche3'
		ELSE 'tranche4'
END tranche
FROM PRODUIT
ORDER BY tranche;

#18ter
SELECT LIB, 'tranche' +
CASE
	WHEN (PRIX < 50) THEN ' 1'
	WHEN (PRIX >= 50 AND PRIX < 150) THEN ' 2'
	WHEN (PRIX >= 150 AND PRIX < 200) THEN ' 3'
	ELSE ' 4'
END tranche
FROM PRODUIT
ORDER BY tranche;

#19
SELECT DISTINCT NCLI
FROM COMMANDE
WHERE NUSINE = 'ACI'
INTERSECT
SELECT DISTINCT NCLI
FROM COMMANDE
WHERE NUSINE = 'REI';

#20
SELECT 'Nous sommes le '+ DATENAME(dw,CURRENT_TIMESTAMP)+' '
+ cast(DAY(CURRENT_TIMESTAMP) AS varchar)
+' du mois de '+ DATENAME(mm,CURRENT_TIMESTAMP)
+' de l''année '+ cast(YEAR(CURRENT_TIMESTAMP) AS varchar)
+' à '+ cast(DATEPART (hh, CURRENT_TIMESTAMP) AS varchar)+' heures ' + cast(DATEPART (mi, CURRENT_TIMESTAMP) AS varchar);

# Commentaires

#DATENAME(d, CURRENT_TIMESTAMP) renvoie le numéro du jour directement sous forme de chaîne de caractères, sans avoir besoin de caster.

#21
SELECT cast(DATEDIFF (mm, '2016-01-01', CURRENT_TIMESTAMP) AS varchar) 'nb de mois',
cast(DATEDIFF (ww, '2016-01-01', CURRENT_TIMESTAMP) AS varchar) 'nb de semaines',
cast(DATEDIFF (dd, '2016-01-01', CURRENT_TIMESTAMP) AS varchar) 'nb de jours';

#22
SELECT '***'+SPACE(47 - LEN(REPLACE(SOCIETE, 'inc.', 'incorporated ***')))+REPLACE(SOCIETE, 'inc.', 'incorporated ***')
'liste des sociétés inc.'
FROM CLIENT
WHERE SOCIETE LIKE '% inc%';

#23
SELECT cast(SUM(1.0/2.0) AS numeric(2,2)) 'résultat de 1 / 2';

#24
SELECT ' liste'
UNION
SELECT '1 - les représentants'
UNION
SELECT cast(NREP AS varchar)
FROM COMMANDE
WHERE NUSINE = 'ACI'
UNION
SELECT '2 - les clients'
UNION
SELECT cast(NCLI AS varchar)
FROM COMMANDE
WHERE NUSINE = 'ACI';
